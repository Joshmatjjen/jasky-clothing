{"ast":null,"code":"var _jsxFileName = \"/home/joshmat/My Projects/React_Projects/jasky-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { fetchCollectionStartAsync } from '../../redux/shop/shop.actions';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching, selectCollections } from '../../redux/shop/shop.selector';\nconst CollectionsOverViewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    fetchCollectionStartAsync;\n    createStructuredSelector;\n    selectIsCollectionFetching; // collectionRef.onSnapshot(async snapshot => {\n    //   const collectionsMap = convertCollectionsSnapShotToMap(snapshot);\n    //   updateCollections(collectionsMap);\n    //   this.setState({ loading: false });\n    // })\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverViewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetching: selectIsCollectionFetching\n});\nexport default connect(null, mapStateToProps)(ShopPage);","map":{"version":3,"sources":["/home/joshmat/My Projects/React_Projects/jasky-clothing/src/pages/shop/shop.component.jsx"],"names":["React","connect","Route","CollectionsOverview","CollectionPage","WithSpinner","fetchCollectionStartAsync","createStructuredSelector","selectIsCollectionFetching","selectCollections","CollectionsOverViewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","render","match","props","loading","state","path","mapStateToProps","isFetching"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAIA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAASC,yBAAT,QAA0C,+BAA1C;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,EAAqCC,iBAArC,QAA8D,gCAA9D;AAEA,MAAMC,8BAA8B,GAAGL,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMQ,yBAAyB,GAAGN,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMQ,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AAErCC,EAAAA,iBAAiB,GAAG;AAClBR,IAAAA,yBAAyB;AACzBC,IAAAA,wBAAwB;AACxBC,IAAAA,0BAA0B,CAHR,CAKlB;AACA;AACA;AACA;AACA;AACD;;AAEDO,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKC,KADhB,CACCD,KADD;AAAA,UAECE,OAFD,GAEa,KAAKC,KAFlB,CAECD,OAFD;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AACE,MAAA,IAAI,YAAKF,KAAK,CAACI,IAAX,CADN;AAEE,MAAA,MAAM,EAAGH,KAAD,IACN,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEC;AAA3C,SAAwDD,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKD,KAAK,CAACI,IAAX,mBADN;AAEE,MAAA,MAAM,EAAGH,KAAD,IACN,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEC;AAAtC,SAAmDD,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAcD;;AA/BoC;;AAkCvC,MAAMI,eAAe,GAAGd,wBAAwB,CAAC;AAC/Ce,EAAAA,UAAU,EAAEd;AADmC,CAAD,CAAhD;AAIA,eAAeP,OAAO,CAAC,IAAD,EAAOoB,eAAP,CAAP,CAA+BT,QAA/B,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\n\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { fetchCollectionStartAsync } from '../../redux/shop/shop.actions';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching, selectCollections } from '../../redux/shop/shop.selector';\n\nconst CollectionsOverViewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  \n  componentDidMount() {\n    fetchCollectionStartAsync\n    createStructuredSelector\n    selectIsCollectionFetching\n  \n    // collectionRef.onSnapshot(async snapshot => {\n    //   const collectionsMap = convertCollectionsSnapShotToMap(snapshot);\n    //   updateCollections(collectionsMap);\n    //   this.setState({ loading: false });\n    // })\n  }\n\n  render() {\n    const { match } = this.props;\n    const { loading } = this.state;\n    return (\n      <div className='shop-page'>\n        <Route exact \n          path={`${match.path}`} \n          render={(props) => \n            <CollectionsOverViewWithSpinner isLoading={loading} {...props} /> \n          } />\n        <Route \n          path={`${match.path}/:collectionId`} \n          render={(props) => \n            <CollectionPageWithSpinner isLoading={loading} {...props} /> \n          } />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetching: selectIsCollectionFetching\n})\n\nexport default connect(null, mapStateToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}