{"ast":null,"code":"import _defineProperty from \"/home/joshmat/My_Projects/React_Projects/jasky-clothing/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/joshmat/My_Projects/React_Projects/jasky-clothing/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/joshmat/My_Projects/React_Projects/jasky-clothing/client/src/components/sign-up/sign-up.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component'; // import { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nimport './sign-up.styles.scss';\nimport { signUpStart } from '../../redux/user/user.action';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart(displayName, email, password);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return (// NORMAL CSS\n    // <div className='sign-up'>\n    //   <h2 className='title'>I do not have a account</h2>\n    //   <span>Sign up with your email and password</span>\n    //   <form className='sign-up-form' onSubmit={handleSubmit}>\n    //     <FormInput\n    //       type='text'\n    //       name='displayName'\n    //       value={displayName}\n    //       onChange={handleChange}\n    //       label='Display Name'\n    //       required\n    //     />\n    //     <FormInput\n    //       type='email'\n    //       name='email'\n    //       value={email}\n    //       onChange={handleChange}\n    //       label='Email'\n    //       required\n    //     />\n    //     <FormInput\n    //       type='password'\n    //       name='password'\n    //       value={password}\n    //       onChange={handleChange}\n    //       label='Password'\n    //       required\n    //     />\n    //     <FormInput\n    //       type='password'\n    //       name='confirmPassword'\n    //       value={confirmPassword}\n    //       onChange={handleChange}\n    //       label='Confirm Password'\n    //       required\n    //     />\n    //     <CustomButton type='submit'>SIGN UP</CustomButton>\n    //   </form>\n    // </div>\n    React.createElement(SignUpContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(SignUpTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"I do not have a account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"SIGN UP\")))\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password) => dispatch(signUpStart({\n    displayName,\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/joshmat/My_Projects/React_Projects/jasky-clothing/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","displayName","email","password","confirmPassword","userCredentials","setCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\n// import { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nimport './sign-up.styles.scss';\nimport { signUpStart } from '../../redux/user/user.action';\n\nconst SignUp = ({ signUpStart }) => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n  const { displayName, email, password, confirmPassword } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart(displayName, email, password);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n  return (\n    // NORMAL CSS\n    // <div className='sign-up'>\n    //   <h2 className='title'>I do not have a account</h2>\n    //   <span>Sign up with your email and password</span>\n    //   <form className='sign-up-form' onSubmit={handleSubmit}>\n    //     <FormInput\n    //       type='text'\n    //       name='displayName'\n    //       value={displayName}\n    //       onChange={handleChange}\n    //       label='Display Name'\n    //       required\n    //     />\n\n    //     <FormInput\n    //       type='email'\n    //       name='email'\n    //       value={email}\n    //       onChange={handleChange}\n    //       label='Email'\n    //       required\n    //     />\n\n    //     <FormInput\n    //       type='password'\n    //       name='password'\n    //       value={password}\n    //       onChange={handleChange}\n    //       label='Password'\n    //       required\n    //     />\n\n    //     <FormInput\n    //       type='password'\n    //       name='confirmPassword'\n    //       value={confirmPassword}\n    //       onChange={handleChange}\n    //       label='Confirm Password'\n    //       required\n    //     />\n\n    //     <CustomButton type='submit'>SIGN UP</CustomButton>\n    //   </form>\n    // </div>\n\n    <SignUpContainer>\n      <SignUpTitle>I do not have a account</SignUpTitle>\n      <span>Sign up with your email and password</span>\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"displayName\"\n          value={displayName}\n          onChange={handleChange}\n          label=\"Display Name\"\n          required\n        />\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          label=\"Password\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={handleChange}\n          label=\"Confirm Password\"\n          required\n        />\n        <CustomButton type=\"submit\">SIGN UP</CustomButton>\n      </form>\n    </SignUpContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password) =>\n    dispatch(signUpStart({ displayName, email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}