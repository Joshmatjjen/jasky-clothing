{"ast":null,"code":"import _defineProperty from \"/home/joshmat/My Projects/React_Projects/jasky-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInSuccess, googleSignInFailure } from './user.action';\nexport function* signInWithGoogle() {\n  try {\n    // const userRef = yield auth.signInWithPopup(googleProvider);\n    // console.log(userRef);\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/home/joshmat/My Projects/React_Projects/jasky-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","signInWithGoogle","signInWithPopup","user","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,eAAzD;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF;AACA;AAFE,iBAGe,MAAML,IAAI,CAACM,eAAL,CAAqBL,cAArB,CAHrB;AAAA,UAGMM,IAHN,QAGMA,IAHN;;AAIF,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA4BK,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAE,MAAMD,OAAO,CAACE,GAAR,EAA1B;AACA,UAAMd,GAAG,CAACO,mBAAmB;AAC3BQ,MAAAA,EAAE,EAAEF,YAAY,CAACE;AADU,OAExBF,YAAY,CAACG,IAAb,EAFwB,EAApB,CAAT;AAID,GAVD,CAUE,OAAOC,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACQ,mBAAmB,CAACS,KAAD,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMnB,UAAU,CACdI,eAAe,CAACgB,oBADF,EAEdV,gBAFc,CAAhB;AAID;AAED,OAAO,UAAUW,SAAV,GAAsB;AAC3B,QAAMnB,GAAG,CAAC,CAACC,IAAI,CAACgB,mBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInSuccess, googleSignInFailure } from './user.action';\n\nexport function* signInWithGoogle() {\n  try {\n    // const userRef = yield auth.signInWithPopup(googleProvider);\n    // console.log(userRef);\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot= yield userRef.get();\n    yield put(googleSignInSuccess({ \n      id: userSnapshot.id, \n      ...userSnapshot.data() \n    }))\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(\n    UserActionTypes.GOOGLE_SIGN_IN_START,\n    signInWithGoogle\n  )\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}