{"ast":null,"code":"var _jsxFileName = \"/home/joshmat/My Projects/React_Projects/jasky-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport { selectCartItems } from '../../redux/cart/cart.selector';\nimport CartItem from '../cart-item/cart-item.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport './cart-dropdown.styles.scss'; // withRouter(get {history}) when connected\n// react see dispatch to props without creating a new mapDispatchToProps()\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"cart-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n})) : React.createElement(\"span\", {\n  className: \"empty-message\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"Your cart is empty\")), React.createElement(CustomButton, {\n  onClick: () => {\n    history.push('/checkout');\n    dispatch(toggleCartHidden());\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, \"Go TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/home/joshmat/My Projects/React_Projects/jasky-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","withRouter","selectCartItems","CartItem","CustomButton","toggleCartHidden","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,OAAOC,QAAP,MAAqB,kCAArB;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AAEA,OAAO,6BAAP,C,CAEA;AACA;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KACnB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEIF,SAAS,CAACG,MAAV,GACEH,SAAS,CAACI,GAAV,CAAcC,QAAQ,IAAI,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA1B,CADF,GAGE;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALN,CADF,EAUE,oBAAC,YAAD;AAAc,EAAA,OAAO,EAAE,MAAM;AAC3BJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACD,GAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,CADF;;AAoBA,MAAMU,eAAe,GAAIf,wBAAwB,CAAC;AAChDO,EAAAA,SAAS,EAAEL;AADqC,CAAD,CAAjD;AAIA,eAAeD,UAAU,CAACF,OAAO,CAACgB,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\n\nimport { selectCartItems } from '../../redux/cart/cart.selector'\n\nimport CartItem from '../cart-item/cart-item.component';\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions'  \n\nimport './cart-dropdown.styles.scss';\n\n// withRouter(get {history}) when connected\n// react see dispatch to props without creating a new mapDispatchToProps()\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\n  <div className='cart-dropdown'>\n    <div className='cart-items'>\n      {\n        cartItems.length? (\n          cartItems.map(cartItem => <CartItem key={cartItem.id} item={cartItem} />)\n        ) : (\n          <span className='empty-message'>Your cart is empty</span>\n        ) \n      }\n    </div>\n    <CustomButton onClick={() => {\n      history.push('/checkout');\n      dispatch(toggleCartHidden())\n    }}>\n      Go TO CHECKOUT\n    </CustomButton>\n  </div>\n);\n\nconst mapStateToProps =  createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n"]},"metadata":{},"sourceType":"module"}