{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], //if data was an array of objects\n// collections => collections.find(collecton => collecton.id === COLLECTION_ID_MAP[collectionUrlParam]\ncollections => collections[collectionUrlParam]);","map":{"version":3,"sources":["/home/joshmat/My Projects/React_Projects/jasky-clothing/src/redux/shop/shop.selector.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC7C,CAACC,UAAD,CAD6C,EAE7CE,IAAI,IAAIA,IAAI,CAACE,WAFgC,CAAxC;AAKP,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACvD,CAACI,iBAAD,CADuD,EAEvDC,WAAW,IACTA,WAAW,GACPE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CADO,GAEP,EALiD,CAAlD;AASP,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAChDZ,cAAc,CACZ,CAACI,iBAAD,CADY,EAGZ;AACA;AAEAC,WAAW,IAAIA,WAAW,CAACO,kBAAD,CANd,CADT","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  collections => \n    collections \n      ? Object.keys(collections).map(key => collections[key])\n      : []\n\n)\n\nexport const selectCollection = collectionUrlParam => \n  createSelector(\n    [selectCollections],\n    \n    //if data was an array of objects\n    // collections => collections.find(collecton => collecton.id === COLLECTION_ID_MAP[collectionUrlParam]\n    \n    collections => collections[collectionUrlParam]\n  )\n\n"]},"metadata":{},"sourceType":"module"}